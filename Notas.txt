// Recien empece esto en "Introduccion a HTML"... fail
// TUTORIAL SEGUIDO: https://argentinaenpython.com/django-girls/tutorial/html/

== GIT ==
    * git status: ver los cambios hasta ahora
    * git add --all . :
    "--all significa que git también reconocerá si has eliminado archivos (por defecto, sólo reconoce archivos nuevos/modificados). También recuerda (del capítulo 3) que . significa el directorio actual."
    * git commit -m "Mensaje de commit" :
    Hacer un commit es decir que terminaste de hacer cambios, es medio como cerrar una version de cambios.
    * git push : EL DEMONIO. sube el repo a github. hacer con wifi.
    * git pull : en PythonAnywhere, retrieves data from github

== PYTHONANYWHERE ==
    * https://www.pythonanywhere.com/user/mako/consoles/
    *

== PYTHON ==
	* python manage.py shell : abre la consola interactiva de Django
	** PYTHON SHELL: (varios de estos son de python normal en realidad)
	    + from django.utils import timezone
	    + from blog.models import Post
	    + Post/User.objects.all()
	    + Post.objects.create(author=me, title='Sample title', text='Test') : crear un objeto "Post"
	    + User/Post.objects.get(username = 'mako')
	    + Post.objects.filter(title__contains='title' / author = me) : 
	    Nota: Hay dos guiones bajos (_) entre title y contains. El ORM de Django utiliza esta sintaxis para separar los nombres de los campos ("title") de las operaciones o filtros ("contains"). Si sólo utilizas un guión bajo, obtendrás un error como "FieldError: Cannot resolve keyword title_contains". Un ejemplo mas:
	    Post.objects.filter(published_date__lte=timezone.now())
        + Post.objects.order_by('created_date')
        + encadenar QuerySets: Post.objects.filter(published_date__lte=timezone.now()).order_by('published_date')
        + exit()  [ME OLVIDE DE HACERLO EN MI BLOG]

    * Las views conectan modelos con plantillas
    * from .models import Post : 
    El punto después de from indica el directorio actual o la aplicación actual. Como views.py y models.py están en el mismo directorio, simplemente usamos . y el nombre del archivo (sin .py). 

    * QuerySet : conjunto de consultas
